require 'test_helper'

class Myclear::SignTest < Minitest::Test
  def setup
    @str = '1|a|2|b'
    @sha1_sign = '07F562B72932B6020F4D955ACFB20717BB73204B64AD4F89ED0EA6DA93A275F63F888AE8DC18FD8AE5D6FE495DA41784D2318C0B7C6EE8684CDED1C03F96DFACA0E1D1F2FED2BF54DABCD0DCF1050539D75FC1ABC329472A26E36814B3BD1A6999EDA6F5DF919D4E74371D92BB794FF209898E14620B525F3BDE1E752ED208FE8A2424E6C84720F16BD25D8822E063142C7ACD9B837E0DBB1092E8C9AC519172C1CCF95639FAAFF0309A079DD7E46ABCD30A5A1164F61473C306467539305FACE90C32421B882CFF1A23ED182651A26B94FE8FF7456832EA26BC8CD36708D2809FABFFD314B37F9362205B03915B603B4F093488FEBF41A4934DC4039BE05F32'
    @sha256_sign = 'B37B4470C8ECC96825B87FDAF768D1645B2483523B6932FF485911100D0DFDFDCF2A1FED15FCA2092D5F941751D78C0269DF53F7AC46EFA5ED27C9F0774A3278C28A36A37746B16014B79834EA01D0200E887DC060449F9826176E7316D11FCD984BB8F3252874263AFC560B4810BC8DA5FA12B6F4E6641E174E72A734EF6C8EDFB730B811E09C4DDB9A27A0C48E2DF8F55ABF9A8840552C8D627113C3D6142541B848E6C667F959E6C618C914CA758426BBBE4D512DBD3B57ACCCB7167378D562DC70BA323AB6372FA38919079E970340B43CB8B43061520641356C23130F0D40A86E62A38946F8A6FA3F9F33DAB3CA8BE520EA39EDB162AF7386262D5C8D3A'
    @sha512_sign = '89EA49A195B00656C2E579573BDE542579B00162F13BB34A5C91D7B4E90AB0B05744EA088C3DB9739E475300A7820E99EF54BB973E857FF8352C6D622AB406D7B28087DCBEE3C1D11575197FA0481445232E8DF7B763350E8C81C8FD05F5F8EEA3C5982794891DFF9EA3695A7B0F9666DA43BEA84B27BCD67D609BDF2436DF1D1AA332D1DD55530C121CA9CEE75C3432BF4CA2B8537E4B7A02DA32BC1283994E38EF7258DE716427B162C02E15C3EB75759256FBC221F09F5B6C8A1C210AB6D799F55293BA367AE37D5AB39C31CF35A05E6EA65B0035B36F928181D65667A5594661923229713770368A387833069A382838ABFEC5BE7111C1AFE7928C52C639'
  end

  def test_generate_sign
    assert_equal @sha1_sign, Myclear::Sign.generate(@str)
    assert_equal @sha256_sign, Myclear::Sign.generate(@str, { digest_type: 'SHA256' })
    assert_equal @sha512_sign, Myclear::Sign.generate(@str, { digest_type: 'SHA512' })
  end

  def test_verify_sign
    assert Myclear::Sign.verify?(@sha1_sign, @str)
    assert Myclear::Sign.verify?(@sha256_sign, @str, { digest_type: 'SHA256' })
    assert Myclear::Sign.verify?(@sha512_sign, @str, { digest_type: 'SHA512' })
  end

  def test_standby_certification
    Myclear.fpx_certification = TEST_RSA_EXPIRED_CERTIFICATE
    assert Myclear::Sign.verify?(@sha1_sign, @str)
    Myclear.fpx_certification = TEST_RSA_CERTIFICATE
  end

end
